@model PaginatedList<OnlineShop2022.Models.ProductModel>

@{
    ViewData["Title"] = "Products";
}

<!-- Solution Additions:  The ability to search and filter products. -->
<h2>Browse Products</h2>

<form asp-action="Products" method="get">
    <div class="container justify-content-center p-2">
        <div class="row">
            <div class="col-md-12">
                <div class="input-group mb-3"> <input type="text" class="form-control input-text" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search by description....">
                    <div class="input-group-append"> <input type="submit" class="btn btn-outline-warning btn-lg" type="button"></input> </div>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="row justify-content-center p-3">
    <div class="col d-flex justify-content-center">
        <a asp-action="Products" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-success">Sort by Name (A-Z)</a>
    </div>
    <div class="col d-flex justify-content-center">
        <a asp-action="Products" asp-route-sortOrder="@ViewData["PriceSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-success">Sort by Price (Ascending)</a>
    </div>
    <div class="col d-flex justify-content-center">
        <a asp-action="Products" class="btn btn-danger">Back to full Products list</a>
    </div>
</div>

<div class="row">
    @{
        foreach (var product in Model)
        {
            <div class="col-md-4 pb-4">
                <div class="card">
                    <img src="@product.ImagePath" class="card-img-top img-product-main" alt="@product.Description">
                    <div class="card-body">
                        <p class="card-text">@product.Description</p>
                        <p class="card-text">£@product.Price</p>
                        <!-- Error Fix: within the Products View, there was previously no ability to add a product to the basket within this view.
                             The button, with the valid route, has been added to this view.-->
                        <a class="btn btn-primary" asp-controller="ShoppingCart" asp-action="AddToShoppingCart" asp-route-ProductId="@product.Id">Add to cart</a>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- Solution Addition: Pagination, which shows 3 products per page! -->

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Products"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary btn-sm @prevDisabled">
    Previous
</a>
<a asp-action="Products"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary btn-sm @nextDisabled">
    Next
</a>
<a class="btn btn-primary btn-sm disabled">Page: @Model.PageIndex</a>